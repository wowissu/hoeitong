.pagebox_wraper
{
    height: 100vh;
    width: 100vw;
    display: block;
}

@mixin pageboxDefiner ($settings: ())
{
    $bindSelector: &;

    $defSettings: (
        sidebarWidth: 50px,
        sidebarUnfoldWidth: 180px,
        sidebarFontColor: #fff,
        sidebarBgColor: #333,
        sidebarBorder: 1px solid #fff,
        headerHeight: 50px,
        headerFontColor: #fff,
        headerBgColor: #333,
        headerBorder: 1px solid #fff,
        sectionFontColor: null,
        sectionBgColor: null,
        unfoldDuration: 0.5s,
        unfoldDelay: 1s,
        itemHoverBgColor: null,
        itemHoverFontColor: null,
        itemDisableBgColor: null,
        itemDisableFontColor: rgba(255, 255, 255, 0.5)
    );

    $settings: map_merge($defSettings, $settings);

    &.pagebox
    {
        height: 100%;

        .pagebox_inner
        {
            display: block;
            white-space: normal;
            height: 100%;
            width: 100%;
            position: relative;
        }

        @include pageboxLogo($settings) {
            @include transition-property(width);
            @include transition-duration(map_get($settings, unfoldDuration));
        };

        @include pageboxHeader($settings) {
            @include transition-property(width, left);
            @include transition-duration(map_get($settings, unfoldDuration), map_get($settings, unfoldDuration));
            // @include transition-delay(map_get($settings, unfoldDelay));
        };

        @include pageboxSider($settings)
        {
            &:not(.pagebox_sidebar__locker)
            {
                &.pagebox_sidebar__unfold,
                &.pagebox_sidebar__hover_unfold:hover
                {
                    // @include animation-name(sidebarUnfold);
                    // @include animation-duration(map_get($settings, unfoldDuration));
                    // @include animation-delay(map_get($settings, unfoldDelay));
                    // @include animation-direction(unset);
                    // @include animation-fill-mode(forwards);
                    z-index: 2;

                    > .pagebox_menu,
                    ~ .pagebox_logo
                    {
                        width: map_get($settings, sidebarUnfoldWidth);
                    }

                    ~ .pagebox_header
                    {
                        left: map_get($settings, sidebarUnfoldWidth);
                        width: calc(100% - #{map_get($settings, sidebarUnfoldWidth)});
                    }

                    ~ .pagebox_section
                    {
                        left: map_get($settings, sidebarUnfoldWidth);
                        width: calc(100% - #{map_get($settings, sidebarUnfoldWidth)});
                    }
                }
            }
        }

        @include pageboxSection($settings) {
            @include transition-property(width, left);
            @include transition-duration(map_get($settings, unfoldDuration), map_get($settings, unfoldDuration));
        };

        #{$bindSelector}.pagebox_layout
        {
            display: none;

            &.layout__nologo
            {
                ~.pagebox_logo
                {
                    display: none;
                }

                ~ .pagebox_header
                {
                    width: 100% !important;
                    left: 0px !important;
                }

                ~ .pagebox_sidebar {
                    top: 0px;
                    height: 100%;
                }
            }

            &.layout__noheader,
            &.layout__empty
            {
                ~ .pagebox_header
                {
                    display: none;
                }

                ~ .pagebox_section
                {
                    left: map_get($settings, sidebarWidth);
                    height: 100%;
                }
            }

            &.layout__nosidebar,
            &.layout__empty
            {
                ~ .pagebox_sidebar
                {
                    display: none;
                }

                ~ .pagebox_section
                {
                    left: 0;
                    width: 100%;
                }
            }

            &.layout__noheader.layout__nosidebar,
            &.layout__empty
            {
                ~ .pagebox_logo
                {
                    display: none;
                }
            }
        }

        .pagebox_menu
        {
            @include transition-property(width);
            @include transition-duration(map_get($settings, unfoldDuration));

            padding: 0;
            margin: 0;
            list-style: none;
            height: 100%;
            overflow: hidden;
            width: map_get($settings, sidebarWidth);
            padding: 10px 0;

            .pagebox_menu_li
            {
                width: 100%;
                display: block;

                &.pagebox_menu_li__disable
                {
                    > .pagebox_menu_item > .item_header
                    {
                        background-color: map_get($settings, itemDisableBgColor);
                        color: map_get($settings, itemDisableFontColor);
                        cursor: not-allowed;
                    }
                }
            }
        }

        .pagebox_menu_item
        {
            .item_header
            {
                $margin: 0px;
                @include flexbox;
                @include flex-just(center);
                @include align-items(center);
                width: calc(100% - #{$margin * 2});
                padding: $margin * 2;
                margin: 0;
                height: 40px;
                margin: 0 $margin;
                cursor: pointer;
                overflow: hidden;
                text-decoration: none;
                color: map_get($settings, sidebarFontColor);

                .item_icon
                {
                    @include flexbox;
                    @include flex-just(center);
                    @include align-items(center);
                    width: map_get($settings, sidebarWidth) - ($margin * 2);
                    height: 100%;
                    font-size: 16px;
                }

                .item_title
                {
                    @include flex(1, 0);
                    overflow: hidden;
                    white-space: nowrap;
                }
            }
        }
    }
}

@mixin pageboxSider ($settings)
{
    $headerHeight: map_get($settings, headerHeight);

    .pagebox_sidebar
    {
        position: absolute;
        top: $headerHeight;
        left: 0;
        height: calc(100% - #{$headerHeight});
        color: map_get($settings, sidebarFontColor);
        background-color: map_get($settings, sidebarBgColor);

        @content;
    }
}

@mixin pageboxLogo ($settings)
{
    .pagebox_logo
    {
        @include inline-flex;
        @include flex-just(center);
        @include align-items(center);
        width: map_get($settings, sidebarWidth);
        height: map_get($settings, headerHeight);
        font-size: 20px;
        border-bottom: if(map_has_key($settings, logoBorder), map_get($settings, logoBorder), map_get($settings, sidebarBorder));
        vertical-align: top;
        position: absolute;
        left: 0;
        background-color: if(map_has_key($settings, logoBgColor), map_get($settings, logoBgColor), map_get($settings, sidebarBgColor));
        color: if(map_has_key($settings, logoFontColor), map_get($settings, logoFontColor), map_get($settings, sidebarFontColor));

        @content;
    }
}

@mixin pageboxHeader ($settings)
{
    $sidebarWidth: map_get($settings, sidebarWidth);
    $headerHeight: map_get($settings, headerHeight);

    .pagebox_header
    {
        position: relative;
        width: calc(100% - #{$sidebarWidth});
        height: $headerHeight;
        display: inline-block;
        vertical-align: top;
        position: relative;
        left: $sidebarWidth;
        border-bottom: map_get($settings, headerBorder);
        background-color: map_get($settings, headerBgColor);
        color: map_get($settings, headerFontColor);

        @content;
    }
}

@mixin pageboxSection ($settings)
{
    $sidebarWidth: map_get($settings, sidebarWidth);
    $headerHeight: map_get($settings, headerHeight);

    .pagebox_section
    {
        width: calc(100% - #{$sidebarWidth});
        height: calc(100% - #{$headerHeight});
        overflow-y: auto;
        overflow-x: hidden;
        position: relative;
        left: $sidebarWidth;
        display: inline-block;
        vertical-align: top;
        background-color: map_get($settings, sectionBgColor);
        color: map_get($settings, sectionFontColor);

        @content;
    }
}

@mixin pageboxtheme ($boxparams: ())
{
    .pagebox_header
    {
        background-color: map_get($boxparams, headerBgColor);
        color: map_get($boxparams, headerFontColor);
    }

    .pagebox_sidebar
    {
        background-color: map_get($boxparams, sidebarBgColor);
        color: map_get($boxparams, sidebarFontColor);
    }

    .pagebox_logo
    {
        background-color: map_get($boxparams, logoBgColor);
        color: map_get($boxparams, logoFontColor);
    }

    .pagebox_section
    {
        background-color: map_get($boxparams, sectionBgColor);
        color: map_get($boxparams, sectionFontColor);
    }

    .pagebox_menu_li
    {
        &:not(.pagebox_menu_li__disable) {
            .item_header
            {
                position: relative;

                &:hover
                {
                    background-color: map_get($boxparams, itemHoverBgColor);
                    color: map_get($boxparams, itemHoverFontColor);
                }

                &.router-link-active
                {
                    background-color: map_get($boxparams, itemActiveBgColor);
                    color: map_get($boxparams, itemActiveFontColor);

                    @if map_has_key($boxparams, itemActiveAfterExtend)
                    {
                        $bind: map_get($boxparams, itemActiveAfterExtend);
                        &::after { @extend #{$bind}; }
                    }

                    @if map_has_key($boxparams, itemActiveBeforeExtend)
                    {
                        $bind: map_get($boxparams, itemActiveBeforeExtend);
                        &::before { @extend #{$bind}; }
                    }
                }
            }
        }

        &.pagebox_menu_li__disable
        {
            > .pagebox_menu_item > .item_header
            {
                background-color: map_get($boxparams, itemDisableBgColor);
                color: map_get($boxparams, itemDisableFontColor);
            }
        }

    }

    @content;
}


@include pageboxDefiner();